class ResultsManager { constructor() { this.results = []; this.init(); } init() { console.log("🏆 Results Manager initialized"); } async loadData() { try { const resultsSnapshot = await database.ref(DB_PATHS.RESULTS).once("value"); if (resultsSnapshot.exists()) { this.results = []; resultsSnapshot.forEach((childSnapshot) => { this.results.push({ id: childSnapshot.key, ...childSnapshot.val() }); }); } else { this.results = []; } this.renderResultsTable(); } catch (error) { console.error("Error loading results:", error); showAlert("danger", "Failed to load results data"); } } renderResultsTable() { const tableBody = document.getElementById("resultsTableBody"); if (!tableBody) return; if (this.results.length === 0) { tableBody.innerHTML = `<tr><td colspan="7" class="text-center py-4"><div class="empty-state"><i class="fas fa-trophy"></i><p>No results found</p><small>Declare your first result to get started</small></div></td></tr>`; return; } tableBody.innerHTML = this.results.map(result => this.createResultRow(result)).join(""); } createResultRow(result) { return `<tr class="fade-in"><td><h6 class="mb-0">${result.bazaarName || "N/A"}</h6></td><td>${formatDate(result.date)}</td><td><span class="badge bg-success">${result.openResult || "N/A"}</span></td><td><span class="badge bg-warning">${result.closeResult || "N/A"}</span></td><td><small class="text-muted">${result.declaredBy || "Admin"}</small></td><td><small class="text-muted">${formatDate(result.createdAt)}</small></td><td><div class="action-buttons"><button class="btn btn-sm btn-outline-primary" onclick="resultsManager.editResult(\"${result.id}\")"><i class="fas fa-edit"></i></button><button class="btn btn-sm btn-outline-danger" onclick="resultsManager.deleteResult(\"${result.id}\")"><i class="fas fa-trash"></i></button></div></td></tr>`; } } let resultsManager; document.addEventListener("DOMContentLoaded", () => { resultsManager = new ResultsManager(); window.resultsManager = resultsManager; });
