class BazaarManager{constructor(){this.bazaars=[];this.filteredBazaars=[];this.currentPage=1;this.itemsPerPage=10;this.searchQuery="";this.statusFilter="all";this.init()}init(){this.bindEvents();console.log("🏪 Bazaar Manager initialized")}bindEvents(){const addBazaarBtn=document.getElementById("addBazaarBtn");if(addBazaarBtn){addBazaarBtn.addEventListener("click",()=>{this.showAddBazaarModal()})}const searchInput=document.getElementById("bazaarSearchInput");if(searchInput){searchInput.addEventListener("input",(e)=>{this.searchQuery=e.target.value;this.filterBazaars()})}const statusFilter=document.getElementById("bazaarStatusFilter");if(statusFilter){statusFilter.addEventListener("change",(e)=>{this.statusFilter=e.target.value;this.filterBazaars()})}}async loadData(){try{const bazaarsSnapshot=await database.ref(DB_PATHS.BAZAARS).once("value");if(bazaarsSnapshot.exists()){this.bazaars=[];bazaarsSnapshot.forEach((childSnapshot)=>{this.bazaars.push({id:childSnapshot.key,...childSnapshot.val()})})}else{this.bazaars=[]}this.filterBazaars();this.renderBazaarsTable()}catch(error){console.error("Error loading bazaars:",error);showAlert("danger","Failed to load bazaars data")}}filterBazaars(){this.filteredBazaars=this.bazaars.filter(bazaar=>{const matchesSearch=!this.searchQuery||bazaar.bazaarName?.toLowerCase().includes(this.searchQuery.toLowerCase())||bazaar.description?.toLowerCase().includes(this.searchQuery.toLowerCase());const matchesStatus=this.statusFilter==="all"||bazaar.status===this.statusFilter;return matchesSearch&&matchesStatus});this.currentPage=1;this.renderBazaarsTable()}renderBazaarsTable(){const tableBody=document.getElementById("bazaarsTableBody");if(!tableBody)return;if(this.filteredBazaars.length===0){tableBody.innerHTML=`<tr><td colspan="7" class="text-center py-4"><div class="empty-state"><i class="fas fa-store"></i><p>No bazaars found</p><small>Add your first bazaar to get started</small></div></td></tr>`;return}const startIndex=(this.currentPage-1)*this.itemsPerPage;const endIndex=startIndex+this.itemsPerPage;const paginatedBazaars=this.filteredBazaars.slice(startIndex,endIndex);tableBody.innerHTML=paginatedBazaars.map(bazaar=>this.createBazaarRow(bazaar)).join("")}createBazaarRow(bazaar){const statusBadge=this.getStatusBadge(bazaar.status);const createdAt=formatDate(bazaar.createdAt);return`<tr class="fade-in"><td><div><h6 class="mb-0">${bazaar.bazaarName||"N/A"}</h6><small class="text-muted">ID: ${bazaar.id}</small></div></td><td><span class="text-muted">${bazaar.description||"No description"}</span></td><td>${statusBadge}</td><td><span class="badge bg-info">${bazaar.openTime||"N/A"}</span></td><td><span class="badge bg-warning">${bazaar.closeTime||"N/A"}</span></td><td><small class="text-muted">${createdAt}</small></td><td><div class="action-buttons"><button class="btn btn-sm btn-outline-primary" onclick="bazaarManager.editBazaar(\"${bazaar.id}\")"><i class="fas fa-edit"></i></button><button class="btn btn-sm btn-outline-danger" onclick="bazaarManager.deleteBazaar(\"${bazaar.id}\")"><i class="fas fa-trash"></i></button></div></td></tr>`}getStatusBadge(status){const badges={active:"<span class=\"badge bg-success\">Active</span>",inactive:"<span class=\"badge bg-danger\">Inactive</span>",upcoming:"<span class=\"badge bg-warning\">Upcoming</span>"};return badges[status]||"<span class=\"badge bg-secondary\">Unknown</span>"}showAddBazaarModal(){const modalHtml=`<div class="modal fade" id="addBazaarModal" tabindex="-1"><div class="modal-dialog"><div class="modal-content"><div class="modal-header"><h5 class="modal-title">Add New Bazaar</h5><button type="button" class="btn-close" data-bs-dismiss="modal"></button></div><form id="addBazaarForm"><div class="modal-body"><div class="mb-3"><label class="form-label">Bazaar Name *</label><input type="text" class="form-control" name="bazaarName" required></div><div class="mb-3"><label class="form-label">Description</label><textarea class="form-control" name="description" rows="3"></textarea></div><div class="row"><div class="col-md-6"><div class="mb-3"><label class="form-label">Open Time *</label><input type="time" class="form-control" name="openTime" required></div></div><div class="col-md-6"><div class="mb-3"><label class="form-label">Close Time *</label><input type="time" class="form-control" name="closeTime" required></div></div></div><div class="mb-3"><label class="form-label">Status *</label><select class="form-select" name="status" required><option value="active">Active</option><option value="inactive">Inactive</option><option value="upcoming">Upcoming</option></select></div></div><div class="modal-footer"><button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button><button type="submit" class="btn btn-primary">Add Bazaar</button></div></form></div></div></div>`;const existingModal=document.getElementById("addBazaarModal");if(existingModal){existingModal.remove()}document.body.insertAdjacentHTML("beforeend",modalHtml);const modal=new bootstrap.Modal(document.getElementById("addBazaarModal"));modal.show();document.getElementById("addBazaarForm").addEventListener("submit",(e)=>{e.preventDefault();this.handleAddBazaar(e.target)})}async handleAddBazaar(form){try{const formData=new FormData(form);const bazaarData={bazaarName:formData.get("bazaarName"),description:formData.get("description"),openTime:formData.get("openTime"),closeTime:formData.get("closeTime"),status:formData.get("status"),createdAt:Date.now(),updatedAt:Date.now()};const validation=validateData(bazaarData,VALIDATION_SCHEMAS.BAZAAR);if(!validation.isValid){showAlert("danger",`Validation failed: ${validation.errors.join(", ")}`);return}const newBazaarRef=await database.ref(DB_PATHS.BAZAARS).push(bazaarData);await logAuditAction("create",auth.currentUser.uid,auth.currentUser.email,"bazaar",newBazaarRef.key,`Created bazaar: ${bazaarData.bazaarName}`,"medium");bootstrap.Modal.getInstance(document.getElementById("addBazaarModal")).hide();showAlert("success","Bazaar created successfully");this.loadData()}catch(error){console.error("Error adding bazaar:",error);showAlert("danger","Failed to create bazaar")}}}let bazaarManager;document.addEventListener("DOMContentLoaded",()=>{bazaarManager=new BazaarManager();window.bazaarManager=bazaarManager});
