class DashboardManager{constructor(){this.stats={totalBazaars:0,totalUsers:0,activeBets:0,totalRevenue:0};this.recentActivity=[];this.init()}init(){console.log("ðŸ“Š Dashboard Manager initialized");this.loadData()}async loadData(){try{await Promise.all([this.loadStats(),this.loadRecentActivity()]);this.updateDashboard()}catch(error){console.error("Error loading dashboard data:",error);showAlert("danger","Failed to load dashboard data")}}async loadStats(){try{const bazaarsSnapshot=await database.ref(DB_PATHS.BAZAARS).once("value");this.stats.totalBazaars=bazaarsSnapshot.exists()?bazaarsSnapshot.numChildren():0;const usersSnapshot=await database.ref(DB_PATHS.USERS).once("value");this.stats.totalUsers=usersSnapshot.exists()?usersSnapshot.numChildren():0;const betsSnapshot=await database.ref(DB_PATHS.BETS).once("value");let activeBets=0;if(betsSnapshot.exists()){betsSnapshot.forEach((childSnapshot)=>{const bet=childSnapshot.val();if(bet.status==="pending"||bet.status==="accepted"){activeBets++}})}this.stats.activeBets=activeBets;const transactionsSnapshot=await database.ref(DB_PATHS.TRANSACTIONS).once("value");let totalRevenue=0;if(transactionsSnapshot.exists()){transactionsSnapshot.forEach((childSnapshot)=>{const transaction=childSnapshot.val();if(transaction.type==="bet"&&transaction.status==="completed"){totalRevenue+=transaction.amount||0}})}this.stats.totalRevenue=totalRevenue}catch(error){console.error("Error loading stats:",error)}}async loadRecentActivity(){try{const auditSnapshot=await database.ref(DB_PATHS.AUDIT).orderByChild("timestamp").limitToLast(10).once("value");this.recentActivity=[];if(auditSnapshot.exists()){auditSnapshot.forEach((childSnapshot)=>{const activity={id:childSnapshot.key,...childSnapshot.val()};this.recentActivity.unshift(activity)})}}catch(error){console.error("Error loading recent activity:",error)}}updateDashboard(){this.updateStats();this.updateRecentActivity()}updateStats(){const totalBazaarsElement=document.getElementById("totalBazaars");const totalUsersElement=document.getElementById("totalUsers");const activeBetsElement=document.getElementById("activeBets");const totalRevenueElement=document.getElementById("totalRevenue");if(totalBazaarsElement){totalBazaarsElement.textContent=this.stats.totalBazaars}if(totalUsersElement){totalUsersElement.textContent=this.stats.totalUsers}if(activeBetsElement){activeBetsElement.textContent=this.stats.activeBets}if(totalRevenueElement){totalRevenueElement.textContent=formatCurrency(this.stats.totalRevenue)}}updateRecentActivity(){const activityList=document.getElementById("recentActivityList");if(!activityList)return;if(this.recentActivity.length===0){activityList.innerHTML=`<div class="empty-state"><i class="fas fa-clipboard-list"></i><p>No recent activity</p><small>Activity will appear here as you use the admin panel</small></div>`;return}activityList.innerHTML=this.recentActivity.map(activity=>this.createActivityItem(activity)).join("")}createActivityItem(activity){const icon=this.getActivityIcon(activity.action);const color=this.getActivityColor(activity.severity);const timeAgo=this.getTimeAgo(activity.timestamp);return`<div class="activity-item"><div class="activity-icon" style="background: ${color};"><i class="${icon}"></i></div><div class="activity-content"><h6>${activity.description}</h6><p>${activity.userName} â€¢ ${timeAgo}</p></div></div>`}getActivityIcon(action){const icons={"create":"fas fa-plus","update":"fas fa-edit","delete":"fas fa-trash","login":"fas fa-sign-in-alt","logout":"fas fa-sign-out-alt","bet":"fas fa-dice","result":"fas fa-trophy","transaction":"fas fa-receipt"};return icons[action]||"fas fa-info-circle"}getActivityColor(severity){const colors={"low":"var(--info-color)","medium":"var(--warning-color)","high":"var(--danger-color)"};return colors[severity]||"var(--info-color)"}getTimeAgo(timestamp){const now=Date.now();const diff=now-timestamp;const minutes=Math.floor(diff/60000);const hours=Math.floor(diff/3600000);const days=Math.floor(diff/86400000);if(days>0){return`${days} day${days>1?"s":""} ago`}else if(hours>0){return`${hours} hour${hours>1?"s":""} ago`}else if(minutes>0){return`${minutes} minute${minutes>1?"s":""} ago`}else{return"Just now"}}}let dashboardManager;document.addEventListener("DOMContentLoaded",()=>{dashboardManager=new DashboardManager();window.dashboardManager=dashboardManager});
